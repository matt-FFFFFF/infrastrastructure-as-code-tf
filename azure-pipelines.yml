# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pr:
- master

variables:
  keyvault: tfsecrets-mawhi

pool:
  vmImage: 'Ubuntu-16.04'

steps:
- task: AzureKeyVault@1
  displayName: Get secrets from KeyVault
  inputs:
    ConnectedServiceName: azurerm-prod
    keyVaultName: $(keyvault)
    SecretsFilter: '*'

- script: export TF_IN_AUTOMATION=1
  displayName: Set TF automation environment variable

- script: |
    echo "access_key = $terraform-backend-access-key" > backend.tfvars
    echo "container_name = $terraform-backend-container-name" >>backend.tfvars
    echo "key = $terraform-backend-key" >> backend.tfvars
    echo "storage_account_name = $terraform-backend-storage-account-name" >> backend.tfvars
    echo "environment = $terraform-backend-environment" >> backend.tfvars
  displayName: 'Write backend secrets file'
  env:
    terraform-backend-storage-account-name: $(terraform-backend-storage-account-name)
    terraform-backend-environment: $(terraform-backend-environment)
    terraform-backend-key: $(terraform-backend-key)
    terraform-backend-container-name: $(terraform-backend-container-name)
    terraform-backend-access-key: $(terraform-backend-access-key)

- script: terraform init -input=false -backend-config="backend.tfvars"
  displayName: Terraform init